[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "ddos-detection-system"
version = "1.0.0"
description = "Professional DDoS detection system with machine learning capabilities"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "Your Name", email = "your.email@domain.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: System Administrators",
    "Intended Audience :: Information Technology",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: System :: Networking :: Monitoring",
    "Topic :: Security",
    "Topic :: Internet :: WWW/HTTP :: WSGI :: Application",
]
keywords = ["ddos", "detection", "security", "network", "monitoring", "machine-learning"]
requires-python = ">=3.8"
dependencies = [
    "scikit-learn>=1.3.0",
    "numpy>=1.24.0",
    "scipy>=1.11.0",
    "scapy>=2.5.0",
    "psutil>=5.9.0",
    "Flask>=2.3.0",
    "Flask-SocketIO>=5.3.0",
    "Flask-CORS>=4.0.0",
    "eventlet>=0.33.0",
    "python-dotenv>=1.0.0",
    "prometheus-client>=0.17.0",
    "structlog>=23.1.0",
    "coloredlogs>=15.0.0",
    "cryptography>=41.0.0",
    "validators>=0.20.0",
    "requests>=2.31.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.7.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "bandit>=1.7.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/ddos-detection-system"
Repository = "https://github.com/yourusername/ddos-detection-system.git"
Issues = "https://github.com/yourusername/ddos-detection-system/issues"
Documentation = "https://github.com/yourusername/ddos-detection-system#readme"

[project.scripts]
ddos-detection = "ddos_detection:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["src*", "ddos_detection.py", "config.py"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".tox"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

[tool.coverage.run]
source = ["src", "ddos_detection.py", "config.py"]
omit = ["tests/*", "*/test_*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]
